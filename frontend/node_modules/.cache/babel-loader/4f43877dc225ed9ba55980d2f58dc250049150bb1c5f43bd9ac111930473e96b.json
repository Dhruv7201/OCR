{"ast":null,"code":"var _jsxFileName = \"/home/ethics/workspace/ethics-medicinebox-ai/frontend/src/components/WebCam.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport VideoStream from \"./VideoStream\";\nimport LineItemsTable from \"./LineItemsTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst videoConstraints = {\n  width: 1000,\n  height: 800,\n  facingMode: \"user\"\n};\nconst WebCam = () => {\n  _s();\n  const [productDetail, setProductDetail] = useState({\n    productName: \"\",\n    batchNumber: \"\",\n    mfgDate: \"\",\n    expDate: \"\"\n  });\n  const [lineItems, setLineItems] = useState([]);\n  const audioRef = useRef(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const handleAddRow = () => {\n    setLineItems(prevLineItems => [...prevLineItems, {\n      productName: \"\",\n      batchNumber: \"\",\n      mfgDate: \"\",\n      expDate: \"\"\n    }]);\n  };\n  const handleDeleteRow = index => {\n    setLineItems(prevLineItems => prevLineItems.filter((item, i) => i !== index));\n  };\n  const handleProductChange = (index, value) => {\n    setLineItems(prevLineItems => {\n      const updatedLineItems = [...prevLineItems];\n      updatedLineItems[index].productName = value;\n      return updatedLineItems;\n    });\n  };\n  const handleBatchChange = (index, value) => {\n    setLineItems(prevLineItems => {\n      const updatedLineItems = [...prevLineItems];\n      updatedLineItems[index].batchNumber = value;\n      return updatedLineItems;\n    });\n  };\n  const handleMfgChange = (index, value) => {\n    setLineItems(prevLineItems => {\n      const updatedLineItems = [...prevLineItems];\n      updatedLineItems[index].mfgDate = value;\n      return updatedLineItems;\n    });\n  };\n  const handleExpChange = (index, value) => {\n    setLineItems(prevLineItems => {\n      const updatedLineItems = [...prevLineItems];\n      updatedLineItems[index].expDate = value;\n      return updatedLineItems;\n    });\n  };\n  const handleSave = () => {\n    if (lineItems.length === 0) {\n      Swal.fire({\n        icon: \"error\",\n        title: \"Oops...\",\n        text: \"Please add at least one row\"\n      });\n      return;\n    }\n    if (lineItems.length === 1) {\n      if (lineItems[0].productName === \"\" || lineItems[0].batchNumber === \"\" || lineItems[0].mfgDate === \"\" || lineItems[0].expDate === \"\") {\n        Swal.fire({\n          icon: \"error\",\n          title: \"Oops...\",\n          text: \"Please fill all the rows\"\n        });\n        return;\n      }\n    }\n    for (let i = 0; i < lineItems.length - 1; i++) {\n      if (lineItems[i].productName === \"\" || lineItems[i].batchNumber === \"\" || lineItems[i].mfgDate === \"\" || lineItems[i].expDate === \"\") {\n        Swal.fire({\n          icon: \"error\",\n          title: \"Oops...\",\n          text: \"Please fill all the rows\"\n        });\n        return;\n      }\n    }\n    // remove the last empty row\n    lineItems.pop();\n    const dataToSave = {\n      data: lineItems\n    };\n    // Post data to the backend\n    axios.post(\"http://192.168.0.156:3001/api/save-data\", dataToSave).then(res => {\n      if (res.status === 200) {\n        // Clear the lineItems\n        setLineItems([]);\n        Swal.fire({\n          icon: \"success\",\n          title: \"Success\",\n          text: \"Data saved successfully\"\n        });\n      }\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n  useEffect(() => {\n    const {\n      productName,\n      batchNumber,\n      mfgDate,\n      expDate\n    } = productDetail;\n    if (productName || batchNumber || mfgDate || expDate) {\n      const tableData = {\n        productName: productName || \"\",\n        batchNumber: batchNumber || \"\",\n        mfgDate: mfgDate || \"\",\n        expDate: expDate || \"\"\n      };\n      if (productName !== \"\") {\n        // make beep sound\n        audioRef.current.play();\n        if ((lineItems === null || lineItems === void 0 ? void 0 : lineItems.length) > 0) {\n          const newState = lineItems.map((obj, index) => {\n            if (index === lineItems.length - 1) {\n              return {\n                ...obj,\n                productName: productName\n              };\n            }\n            return obj;\n          });\n          setLineItems(newState);\n        } else {\n          setLineItems(prevLineItems => [...prevLineItems, tableData]);\n        }\n      }\n      if (batchNumber !== \"\") {\n        // make beep sound\n        audioRef.current.play();\n        if ((lineItems === null || lineItems === void 0 ? void 0 : lineItems.length) > 0) {\n          const newState = lineItems.map((obj, index) => {\n            if (index === lineItems.length - 1) {\n              return {\n                ...obj,\n                batchNumber: batchNumber,\n                mfgDate: mfgDate,\n                expDate: expDate\n              };\n            }\n            return obj;\n          });\n          setLineItems(newState);\n        } else {\n          setLineItems(prevLineItems => [...prevLineItems, tableData]);\n        }\n      }\n      setProductDetail({\n        productName: \"\",\n        batchNumber: \"\",\n        mfgDate: \"\",\n        expDate: \"\"\n      });\n    }\n  }, [productDetail, lineItems]);\n  useEffect(() => {\n    if (lineItems.length > 0) {\n      const lastItem = lineItems[lineItems.length - 1];\n      if (lastItem.productName && lastItem.batchNumber) {\n        handleAddRow();\n      }\n    }\n  }, [lineItems]);\n  const sendFrameToBackend = useCallback(async () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    canvas.width = videoConstraints.width;\n    canvas.height = videoConstraints.height;\n    if (videoRef.current) {\n      ctx.drawImage(videoRef.current, 0, 0, videoConstraints.width, videoConstraints.height);\n      const imageData = canvas.toDataURL(\"image/jpeg\");\n      try {\n        const response = await fetch(\"http://192.168.0.156:3001/api/send-frame\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            frame: imageData\n          })\n        });\n        const data = await response.json();\n        console.log(data);\n        setProductDetail(data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }, [videoConstraints]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"/beep.mp3\",\n        type: \"audio/mp3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(VideoStream, {\n          videoConstraints: videoConstraints,\n          videoRef: videoRef,\n          canvasRef: canvasRef,\n          sendFrameToBackend: sendFrameToBackend\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-2\",\n          children: /*#__PURE__*/_jsxDEV(LineItemsTable, {\n            lineItems: lineItems,\n            handleProductChange: handleProductChange,\n            handleBatchChange: handleBatchChange,\n            handleMfgChange: handleMfgChange,\n            handleExpChange: handleExpChange,\n            handleDeleteRow: handleDeleteRow,\n            handleAddRow: handleAddRow,\n            handleSave: handleSave\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n};\n_s(WebCam, \"t6zU7XWnixjKdlGmOweLhaBmMwE=\");\n_c = WebCam;\nexport default WebCam;\nvar _c;\n$RefreshReg$(_c, \"WebCam\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","axios","Swal","VideoStream","LineItemsTable","jsxDEV","_jsxDEV","videoConstraints","width","height","facingMode","WebCam","_s","productDetail","setProductDetail","productName","batchNumber","mfgDate","expDate","lineItems","setLineItems","audioRef","videoRef","canvasRef","handleAddRow","prevLineItems","handleDeleteRow","index","filter","item","i","handleProductChange","value","updatedLineItems","handleBatchChange","handleMfgChange","handleExpChange","handleSave","length","fire","icon","title","text","pop","dataToSave","data","post","then","res","status","catch","err","console","error","tableData","current","play","newState","map","obj","lastItem","sendFrameToBackend","canvas","ctx","getContext","drawImage","imageData","toDataURL","response","fetch","method","headers","body","JSON","stringify","frame","json","log","className","children","ref","src","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ethics/workspace/ethics-medicinebox-ai/frontend/src/components/WebCam.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport VideoStream from \"./VideoStream\";\nimport LineItemsTable from \"./LineItemsTable\";\n\nconst videoConstraints = {\n  width: 1000,\n  height: 800,\n  facingMode: \"user\",\n};\n\nconst WebCam = () => {\n  const [productDetail, setProductDetail] = useState({\n    productName: \"\",\n    batchNumber: \"\",\n    mfgDate: \"\",\n    expDate: \"\",\n  });\n  const [lineItems, setLineItems] = useState([]);\n  const audioRef = useRef(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  const handleAddRow = () => {\n    setLineItems((prevLineItems) => [\n      ...prevLineItems,\n      { productName: \"\", batchNumber: \"\", mfgDate: \"\", expDate: \"\" },\n    ]);\n  };\n\n  const handleDeleteRow = (index) => {\n    setLineItems((prevLineItems) =>\n      prevLineItems.filter((item, i) => i !== index)\n    );\n  };\n\n  const handleProductChange = (index, value) => {\n    setLineItems((prevLineItems) => {\n      const updatedLineItems = [...prevLineItems];\n      updatedLineItems[index].productName = value;\n      return updatedLineItems;\n    });\n  };\n\n  const handleBatchChange = (index, value) => {\n    setLineItems((prevLineItems) => {\n      const updatedLineItems = [...prevLineItems];\n      updatedLineItems[index].batchNumber = value;\n      return updatedLineItems;\n    });\n  };\n\n  const handleMfgChange = (index, value) => {\n    setLineItems((prevLineItems) => {\n      const updatedLineItems = [...prevLineItems];\n      updatedLineItems[index].mfgDate = value;\n      return updatedLineItems;\n    });\n  };\n\n  const handleExpChange = (index, value) => {\n    setLineItems((prevLineItems) => {\n      const updatedLineItems = [...prevLineItems];\n      updatedLineItems[index].expDate = value;\n      return updatedLineItems;\n    });\n  };\n\n  const handleSave = () => {\n    if (lineItems.length === 0) {\n      Swal.fire({\n        icon: \"error\",\n        title: \"Oops...\",\n        text: \"Please add at least one row\",\n      });\n      return;\n    }\n    if (lineItems.length === 1) {\n      if (\n        lineItems[0].productName === \"\" ||\n        lineItems[0].batchNumber === \"\" ||\n        lineItems[0].mfgDate === \"\" ||\n        lineItems[0].expDate === \"\"\n      ) {\n        Swal.fire({\n          icon: \"error\",\n          title: \"Oops...\",\n          text: \"Please fill all the rows\",\n        });\n        return;\n      }\n    }\n    for (let i = 0; i < lineItems.length - 1; i++) {\n      if (\n        lineItems[i].productName === \"\" ||\n        lineItems[i].batchNumber === \"\" ||\n        lineItems[i].mfgDate === \"\" ||\n        lineItems[i].expDate === \"\"\n      ) {\n        Swal.fire({\n          icon: \"error\",\n          title: \"Oops...\",\n          text: \"Please fill all the rows\",\n        });\n        return;\n      }\n    }\n    // remove the last empty row\n    lineItems.pop();\n    const dataToSave = {\n      data: lineItems,\n    };\n    // Post data to the backend\n    axios\n      .post(\"http://192.168.0.156:3001/api/save-data\", dataToSave)\n      .then((res) => {\n        if (res.status === 200) {\n          // Clear the lineItems\n          setLineItems([]);\n          Swal.fire({\n            icon: \"success\",\n            title: \"Success\",\n            text: \"Data saved successfully\",\n          });\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  useEffect(() => {\n    const { productName, batchNumber, mfgDate, expDate } = productDetail;\n    if (productName || batchNumber || mfgDate || expDate) {\n      const tableData = {\n        productName: productName || \"\",\n        batchNumber: batchNumber || \"\",\n        mfgDate: mfgDate || \"\",\n        expDate: expDate || \"\",\n      };\n\n      if (productName !== \"\") {\n        // make beep sound\n        audioRef.current.play();\n        if (lineItems?.length > 0) {\n          const newState = lineItems.map((obj, index) => {\n            if (index === lineItems.length - 1) {\n              return { ...obj, productName: productName };\n            }\n            return obj;\n          });\n          setLineItems(newState);\n        } else {\n          setLineItems((prevLineItems) => [...prevLineItems, tableData]);\n        }\n      }\n      if (batchNumber !== \"\") {\n        // make beep sound\n        audioRef.current.play();\n        if (lineItems?.length > 0) {\n          const newState = lineItems.map((obj, index) => {\n            if (index === lineItems.length - 1) {\n              return {\n                ...obj,\n                batchNumber: batchNumber,\n                mfgDate: mfgDate,\n                expDate: expDate,\n              };\n            }\n            return obj;\n          });\n          setLineItems(newState);\n        } else {\n          setLineItems((prevLineItems) => [...prevLineItems, tableData]);\n        }\n      }\n      setProductDetail({\n        productName: \"\",\n        batchNumber: \"\",\n        mfgDate: \"\",\n        expDate: \"\",\n      });\n    }\n  }, [productDetail, lineItems]);\n\n  useEffect(() => {\n    if (lineItems.length > 0) {\n      const lastItem = lineItems[lineItems.length - 1];\n      if (lastItem.productName && lastItem.batchNumber) {\n        handleAddRow();\n      }\n    }\n  }, [lineItems]);\n\n  const sendFrameToBackend = useCallback(async () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    canvas.width = videoConstraints.width;\n    canvas.height = videoConstraints.height;\n\n    if (videoRef.current) {\n      ctx.drawImage(\n        videoRef.current,\n        0,\n        0,\n        videoConstraints.width,\n        videoConstraints.height\n      );\n      const imageData = canvas.toDataURL(\"image/jpeg\");\n\n      try {\n        const response = await fetch(\n          \"http://192.168.0.156:3001/api/send-frame\",\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ frame: imageData }),\n          }\n        );\n\n        const data = await response.json();\n        console.log(data);\n        setProductDetail(data);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }, [videoConstraints]);\n\n  return (\n    <div className=\"text-center\">\n      <audio ref={audioRef}>\n        <source src=\"/beep.mp3\" type=\"audio/mp3\" />\n      </audio>\n      <div className=\"row\">\n        <div className=\"col-md-4\">\n          <VideoStream\n            videoConstraints={videoConstraints}\n            videoRef={videoRef}\n            canvasRef={canvasRef}\n            sendFrameToBackend={sendFrameToBackend}\n          />\n        </div>\n        <div className=\"col-md-6\">\n          <div className=\"p-2\">\n            <LineItemsTable\n              lineItems={lineItems}\n              handleProductChange={handleProductChange}\n              handleBatchChange={handleBatchChange}\n              handleMfgChange={handleMfgChange}\n              handleExpChange={handleExpChange}\n              handleDeleteRow={handleDeleteRow}\n              handleAddRow={handleAddRow}\n              handleSave={handleSave}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WebCam;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}